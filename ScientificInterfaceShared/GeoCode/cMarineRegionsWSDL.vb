' ===============================================================================
' This file is part of Ecopath with Ecosim (EwE)
'
' EwE is free software: you can redistribute it and/or modify it under the terms
' of the GNU General Public License version 2 as published by the Free Software 
' Foundation.
'
' EwE is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
' without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
' PURPOSE. See the GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License along with EwE.
' If not, see <http://www.gnu.org/licenses/gpl-2.0.html>. 
'
' Copyright 1991- 
'    UBC Institute for the Oceans and Fisheries, Vancouver BC, Canada, and
'    Ecopath International Initiative, Barcelona, Spain
' ===============================================================================
'

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

' ===============================================================================
' This class is manually generated via Visual Studio tool wsdl.exe
' Partially converted to VB.NET via http://www.developerfusion.com/tools/convert/csharp-to-vb/?batchId=907793bb-a406-4afc-9004-4e8071ad335d
' Converted VB file contained errors in the event firing logic, which were fixed by hand
' ===============================================================================

' 
' This source code was auto-generated by wsdl, Version=4.6.1590.0.
' 

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Web.Services.WebServiceBindingAttribute(Name:="GazetteerServiceBinding", Namespace:="http://gazetteer/v1.0"),
 System.Xml.Serialization.SoapIncludeAttribute(GetType(gazetteerSource)),
 System.Xml.Serialization.SoapIncludeAttribute(GetType(gazetteerType)),
 System.Xml.Serialization.SoapIncludeAttribute(GetType(gazetteerWMS)),
 System.Xml.Serialization.SoapIncludeAttribute(GetType(gazetteerRelation))>
Public Class cMarineRegionsWSDL
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

    Private getGazetteerRecordsByNameOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerRecordsByNamesOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerRecordsBySourceOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerRecordsByTypeOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerRecordByMRGIDOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerRelationsByMRGIDOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerWMSesOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerRecordsByLatLongOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerTypesOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerSourcesOperationCompleted As System.Threading.SendOrPostCallback

    Private getGazetteerNamesByMRGIDOperationCompleted As System.Threading.SendOrPostCallback

    Public Sub New()
        MyBase.New
        Me.Url = "http://marineregions.org/gazetteer.php?p=soap"
    End Sub

    Public Event getGazetteerRecordsByNameCompleted As getGazetteerRecordsByNameCompletedEventHandler

    Public Event getGazetteerRecordsByNamesCompleted As getGazetteerRecordsByNamesCompletedEventHandler

    Public Event getGazetteerRecordsBySourceCompleted As getGazetteerRecordsBySourceCompletedEventHandler

    Public Event getGazetteerRecordsByTypeCompleted As getGazetteerRecordsByTypeCompletedEventHandler

    Public Event getGazetteerRecordByMRGIDCompleted As getGazetteerRecordByMRGIDCompletedEventHandler

    Public Event getGazetteerRelationsByMRGIDCompleted As getGazetteerRelationsByMRGIDCompletedEventHandler

    Public Event getGazetteerWMSesCompleted As getGazetteerWMSesCompletedEventHandler

    Public Event getGazetteerRecordsByLatLongCompleted As getGazetteerRecordsByLatLongCompletedEventHandler

    Public Event getGazetteerTypesCompleted As getGazetteerTypesCompletedEventHandler

    Public Event getGazetteerSourcesCompleted As getGazetteerSourcesCompletedEventHandler

    Public Event getGazetteerNamesByMRGIDCompleted As getGazetteerNamesByMRGIDCompletedEventHandler

    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerRecordsByName", RequestNamespace:="http://gazetteer/v1.0/gazetteerRecords", ResponseNamespace:="http://gazetteer/v1.0/gazetteerRecords")>
    Public Function getGazetteerRecordsByName(ByVal GazetteerName As String, ByVal bLike As Boolean, ByVal fuzzy As Boolean) As gazetteerRecord()
        Dim results() As Object = Me.Invoke("getGazetteerRecordsByName", New Object() {GazetteerName, bLike, fuzzy})
        Return CType(results(0), gazetteerRecord())
    End Function

    Public Function BegingetGazetteerRecordsByName(ByVal GazetteerName As String, ByVal bLike As Boolean, ByVal fuzzy As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerRecordsByName", New Object() {GazetteerName, bLike, fuzzy}, callback, asyncState)
    End Function

    Public Function EndgetGazetteerRecordsByName(ByVal asyncResult As System.IAsyncResult) As gazetteerRecord()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerRecord())
    End Function

    Public Overloads Sub getGazetteerRecordsByNameAsync(ByVal GazetteerName As String, ByVal bLike As Boolean, ByVal fuzzy As Boolean)
        Me.getGazetteerRecordsByNameAsync(GazetteerName, bLike, fuzzy, Nothing)
    End Sub

    Public Overloads Sub getGazetteerRecordsByNameAsync(ByVal GazetteerName As String, ByVal bLike As Boolean, ByVal fuzzy As Boolean, ByVal userState As Object)
        If (Me.getGazetteerRecordsByNameOperationCompleted Is Nothing) Then
            Me.getGazetteerRecordsByNameOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerRecordsByNameOperationCompleted)
        End If
        Me.InvokeAsync("getGazetteerRecordsByName", New Object() {GazetteerName, bLike, fuzzy}, Me.getGazetteerRecordsByNameOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerRecordsByNameOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerRecordsByNameCompleted(Me, New getGazetteerRecordsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub

    '<System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerRecordsByNames", RequestNamespace:="http://gazetteer/v1.0/gazetteerMatches", ResponseNamespace:="http://gazetteer/v1.0/gazetteerMatches")>
    'Public Function getGazetteerRecordsByNames(ByVal gazetteerNames() As String, ByVal bLike As Boolean, ByVal fuzzy As Boolean) As gazetteerRecord(,)
    '    Dim results() As Object = Me.Invoke("getGazetteerRecordsByNames", New Object() {gazetteerNames, bLike, fuzzy})
    '    Return CType(results(0), gazetteerRecord(,))
    'End Function

    'Public Function BegingetGazetteerRecordsByNames(ByVal gazetteerNames() As String, ByVal bLike As Boolean, ByVal fuzzy As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
    '    Return Me.BeginInvoke("getGazetteerRecordsByNames", New Object() {gazetteerNames, bLike, fuzzy}, callback, asyncState)
    'End Function

    'Public Function EndgetGazetteerRecordsByNames(ByVal asyncResult As System.IAsyncResult) As gazetteerRecord(,)
    '    Dim results() As Object = Me.EndInvoke(asyncResult)
    '    Return CType(results(0), gazetteerRecord(,))
    'End Function

    'Public Overloads Sub getGazetteerRecordsByNamesAsync(ByVal gazetteerNames() As String, ByVal bLike As Boolean, ByVal fuzzy As Boolean)
    '    Me.getGazetteerRecordsByNamesAsync(gazetteerNames, bLike, fuzzy, Nothing)
    'End Sub

    'Public Overloads Sub getGazetteerRecordsByNamesAsync(ByVal gazetteerNames() As String, ByVal bLike As Boolean, ByVal fuzzy As Boolean, ByVal userState As Object)
    '    If (Me.getGazetteerRecordsByNamesOperationCompleted Is Nothing) Then
    '        Me.getGazetteerRecordsByNamesOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerRecordsByNamesOperationCompleted)
    '    End If
    '    Me.InvokeAsync("getGazetteerRecordsByNames", New Object() {gazetteerNames, bLike, fuzzy}, Me.getGazetteerRecordsByNamesOperationCompleted, userState)
    'End Sub

    'Private Sub OngetGazetteerRecordsByNamesOperationCompleted(ByVal arg As Object)
    '    Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
    '    RaiseEvent getGazetteerRecordsByNamesCompleted(Me, New getGazetteerRecordsByNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    'End Sub

    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerRecordsBySource", RequestNamespace:="http://gazetteer/v1.0/gazetteerRecords", ResponseNamespace:="http://gazetteer/v1.0/gazetteerRecords")>
    Public Function getGazetteerRecordsBySource(ByVal gazetteerSource As String) As gazetteerRecord()
        Dim results() As Object = Me.Invoke("getGazetteerRecordsBySource", New Object() {gazetteerSource})
        Return CType(results(0), gazetteerRecord())
    End Function

    Public Function BegingetGazetteerRecordsBySource(ByVal gazetteerSource As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerRecordsBySource", New Object() {gazetteerSource}, callback, asyncState)
    End Function

    Public Function EndgetGazetteerRecordsBySource(ByVal asyncResult As System.IAsyncResult) As gazetteerRecord()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerRecord())
    End Function


    Public Overloads Sub getGazetteerRecordsBySourceAsync(ByVal gazetteerSource As String)
        Me.getGazetteerRecordsBySourceAsync(gazetteerSource, Nothing)
    End Sub

    Public Overloads Sub getGazetteerRecordsBySourceAsync(ByVal gazetteerSource As String, ByVal userState As Object)
        If (Me.getGazetteerRecordsBySourceOperationCompleted Is Nothing) Then
            Me.getGazetteerRecordsBySourceOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerRecordsBySourceOperationCompleted)
        End If
        Me.InvokeAsync("getGazetteerRecordsBySource", New Object() {gazetteerSource}, Me.getGazetteerRecordsBySourceOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerRecordsBySourceOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerRecordsBySourceCompleted(Me, New getGazetteerRecordsBySourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub

    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerRecordsByType", RequestNamespace:="http://gazetteer/v1.0/gazetteerRecords", ResponseNamespace:="http://gazetteer/v1.0/gazetteerRecords")>
    Public Function getGazetteerRecordsByType(ByVal gazetteerType As String, ByVal offset As Integer) As gazetteerRecord()
        Dim results() As Object = Me.Invoke("getGazetteerRecordsByType", New Object() {gazetteerType, offset})
        Return CType(results(0), gazetteerRecord())
    End Function

    Public Function BegingetGazetteerRecordsByType(ByVal gazetteerType As String, ByVal offset As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerRecordsByType", New Object() {gazetteerType, offset}, callback, asyncState)
    End Function

    Public Function EndgetGazetteerRecordsByType(ByVal asyncResult As System.IAsyncResult) As gazetteerRecord()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerRecord())
    End Function

    Public Overloads Sub getGazetteerRecordsByTypeAsync(ByVal gazetteerType As String, ByVal offset As Integer)
        Me.getGazetteerRecordsByTypeAsync(gazetteerType, offset, Nothing)
    End Sub

    Public Overloads Sub getGazetteerRecordsByTypeAsync(ByVal gazetteerType As String, ByVal offset As Integer, ByVal userState As Object)
        If (Me.getGazetteerRecordsByTypeOperationCompleted Is Nothing) Then
            Me.getGazetteerRecordsByTypeOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerRecordsByTypeOperationCompleted)
        End If
        Me.InvokeAsync("getGazetteerRecordsByType", New Object() {gazetteerType, offset}, Me.getGazetteerRecordsByTypeOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerRecordsByTypeOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerRecordsByTypeCompleted(Me, New getGazetteerRecordsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub

    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerRecordByMRGID", RequestNamespace:="http://gazetteer/v1.0/gazetteerRecord", ResponseNamespace:="http://gazetteer/v1.0/gazetteerRecord")>
    Public Function getGazetteerRecordByMRGID(ByVal MRGID As Integer) As gazetteerRecord
        Dim results() As Object = Me.Invoke("getGazetteerRecordByMRGID", New Object() {MRGID})
        Return CType(results(0), gazetteerRecord)
    End Function

    Public Function BegingetGazetteerRecordByMRGID(ByVal MRGID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerRecordByMRGID", New Object() {MRGID}, callback, asyncState)
    End Function

    Public Function EndgetGazetteerRecordByMRGID(ByVal asyncResult As System.IAsyncResult) As gazetteerRecord
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerRecord)
    End Function

    Public Overloads Sub getGazetteerRecordByMRGIDAsync(ByVal MRGID As Integer)
        Me.getGazetteerRecordByMRGIDAsync(MRGID, Nothing)
    End Sub

    Public Overloads Sub getGazetteerRecordByMRGIDAsync(ByVal MRGID As Integer, ByVal userState As Object)
        If (Me.getGazetteerRecordByMRGIDOperationCompleted Is Nothing) Then
            Me.getGazetteerRecordByMRGIDOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerRecordByMRGIDOperationCompleted)
        End If

        Me.InvokeAsync("getGazetteerRecordByMRGID", New Object() {MRGID}, Me.getGazetteerRecordByMRGIDOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerRecordByMRGIDOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerRecordByMRGIDCompleted(Me, New getGazetteerRecordByMRGIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub

    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerRelationsByMRGID", RequestNamespace:="http://gazetteer/v1.0/gazetteerRelations", ResponseNamespace:="http://gazetteer/v1.0/gazetteerRelations")>
    Public Function getGazetteerRelationsByMRGID(ByVal MRGID As Integer, ByVal direction As String, ByVal type As String) As gazetteerRelation()
        Dim results() As Object = Me.Invoke("getGazetteerRelationsByMRGID", New Object() {MRGID, direction, type})
        Return CType(results(0), gazetteerRelation())
    End Function

    Public Function BegingetGazetteerRelationsByMRGID(ByVal MRGID As Integer, ByVal direction As String, ByVal type As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerRelationsByMRGID", New Object() {MRGID, direction, type}, callback, asyncState)
    End Function

    Public Function EndgetGazetteerRelationsByMRGID(ByVal asyncResult As System.IAsyncResult) As gazetteerRelation()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerRelation())
    End Function

    Public Overloads Sub getGazetteerRelationsByMRGIDAsync(ByVal MRGID As Integer, ByVal direction As String, ByVal type As String)
        Me.getGazetteerRelationsByMRGIDAsync(MRGID, direction, type, Nothing)
    End Sub

    Public Overloads Sub getGazetteerRelationsByMRGIDAsync(ByVal MRGID As Integer, ByVal direction As String, ByVal type As String, ByVal userState As Object)
        If (Me.getGazetteerRelationsByMRGIDOperationCompleted Is Nothing) Then
            Me.getGazetteerRelationsByMRGIDOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerRelationsByMRGIDOperationCompleted)
        End If
        Me.InvokeAsync("getGazetteerRelationsByMRGID", New Object() {MRGID, direction, type}, Me.getGazetteerRelationsByMRGIDOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerRelationsByMRGIDOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerRelationsByMRGIDCompleted(Me, New getGazetteerRelationsByMRGIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub


    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerWMSes", RequestNamespace:="http://gazetteer/v1.0/gazetteerWMSes", ResponseNamespace:="http://gazetteer/v1.0/gazetteerWMSes")>
    Public Function getGazetteerWMSes(ByVal MRGID As Integer) As gazetteerWMS()
        Dim results() As Object = Me.Invoke("getGazetteerWMSes", New Object() {MRGID})
        Return CType(results(0), gazetteerWMS())
    End Function


    Public Function BegingetGazetteerWMSes(ByVal MRGID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerWMSes", New Object() {MRGID}, callback, asyncState)
    End Function


    Public Function EndgetGazetteerWMSes(ByVal asyncResult As System.IAsyncResult) As gazetteerWMS()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerWMS())
    End Function


    Public Overloads Sub getGazetteerWMSesAsync(ByVal MRGID As Integer)
        Me.getGazetteerWMSesAsync(MRGID, Nothing)
    End Sub


    Public Overloads Sub getGazetteerWMSesAsync(ByVal MRGID As Integer, ByVal userState As Object)
        If (Me.getGazetteerWMSesOperationCompleted Is Nothing) Then
            Me.getGazetteerWMSesOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerWMSesOperationCompleted)
        End If
        Me.InvokeAsync("getGazetteerWMSes", New Object() {MRGID}, Me.getGazetteerWMSesOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerWMSesOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerWMSesCompleted(Me, New getGazetteerWMSesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub

    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerRecordsByLatLong", RequestNamespace:="http://gazetteer/v1.0/gazetteerRecord", ResponseNamespace:="http://gazetteer/v1.0/gazetteerRecord")>
    Public Function getGazetteerRecordsByLatLong(ByVal Latitude As Single, ByVal Longitude As Single, ByVal LatitudeRadius As Single, ByVal LongitudeRadius As Single) As gazetteerRecord
        Dim results() As Object = Me.Invoke("getGazetteerRecordsByLatLong", New Object() {Latitude, Longitude, LatitudeRadius, LongitudeRadius})
        Return CType(results(0), gazetteerRecord)
    End Function

    Public Function BegingetGazetteerRecordsByLatLong(ByVal Latitude As Single, ByVal Longitude As Single, ByVal LatitudeRadius As Single, ByVal LongitudeRadius As Single, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerRecordsByLatLong", New Object() {Latitude, Longitude, LatitudeRadius, LongitudeRadius}, callback, asyncState)
    End Function

    Public Function EndgetGazetteerRecordsByLatLong(ByVal asyncResult As System.IAsyncResult) As gazetteerRecord
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerRecord)
    End Function

    Public Overloads Sub getGazetteerRecordsByLatLongAsync(ByVal Latitude As Single, ByVal Longitude As Single, ByVal LatitudeRadius As Single, ByVal LongitudeRadius As Single)
        Me.getGazetteerRecordsByLatLongAsync(Latitude, Longitude, LatitudeRadius, LongitudeRadius, Nothing)
    End Sub

    Public Overloads Sub getGazetteerRecordsByLatLongAsync(ByVal Latitude As Single, ByVal Longitude As Single, ByVal LatitudeRadius As Single, ByVal LongitudeRadius As Single, ByVal userState As Object)
        If (Me.getGazetteerRecordsByLatLongOperationCompleted Is Nothing) Then
            Me.getGazetteerRecordsByLatLongOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerRecordsByLatLongOperationCompleted)
        End If
        Me.InvokeAsync("getGazetteerRecordsByLatLong", New Object() {Latitude, Longitude, LatitudeRadius, LongitudeRadius}, Me.getGazetteerRecordsByLatLongOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerRecordsByLatLongOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerRecordsByLatLongCompleted(Me, New getGazetteerRecordsByLatLongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub

    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerTypes", RequestNamespace:="http://gazetteer/v1.0/gazetteerTypes", ResponseNamespace:="http://gazetteer/v1.0/gazetteerTypes")>
    Public Function getGazetteerTypes() As gazetteerType()
        Dim results() As Object = Me.Invoke("getGazetteerTypes", New Object((0) - 1) {})
        Return CType(results(0), gazetteerType())
    End Function

    Public Function BegingetGazetteerTypes(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerTypes", New Object((0) - 1) {}, callback, asyncState)
    End Function

    Public Function EndgetGazetteerTypes(ByVal asyncResult As System.IAsyncResult) As gazetteerType()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerType())
    End Function

    Public Overloads Sub getGazetteerTypesAsync()
        Me.getGazetteerTypesAsync(Nothing)
    End Sub

    Public Overloads Sub getGazetteerTypesAsync(ByVal userState As Object)
        If (Me.getGazetteerTypesOperationCompleted Is Nothing) Then
            Me.getGazetteerTypesOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerTypesOperationCompleted)
        End If

        Me.InvokeAsync("getGazetteerTypes", New Object((0) - 1) {}, Me.getGazetteerTypesOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerTypesOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerTypesCompleted(Me, New getGazetteerTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub

    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerSources", RequestNamespace:="http://gazetteer/v1.0/gazetteerSources", ResponseNamespace:="http://gazetteer/v1.0/gazetteerSources")>
    Public Function getGazetteerSources() As gazetteerSource()
        Dim results() As Object = Me.Invoke("getGazetteerSources", New Object((0) - 1) {})
        Return CType(results(0), gazetteerSource())
    End Function

    Public Function BegingetGazetteerSources(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerSources", New Object((0) - 1) {}, callback, asyncState)
    End Function

    Public Function EndgetGazetteerSources(ByVal asyncResult As System.IAsyncResult) As gazetteerSource()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), gazetteerSource())
    End Function

    Public Overloads Sub getGazetteerSourcesAsync()
        Me.getGazetteerSourcesAsync(Nothing)
    End Sub

    Public Overloads Sub getGazetteerSourcesAsync(ByVal userState As Object)
        If (Me.getGazetteerSourcesOperationCompleted Is Nothing) Then
            Me.getGazetteerSourcesOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerSourcesOperationCompleted)
        End If
        Me.InvokeAsync("getGazetteerSources", New Object((0) - 1) {}, Me.getGazetteerSourcesOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerSourcesOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerSourcesCompleted(Me, New getGazetteerSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub


    <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGazetteerNamesByMRGID", RequestNamespace:="http://gazetteer/v1.0/gazetteerNames", ResponseNamespace:="http://gazetteer/v1.0/gazetteerNames")>
    Public Function getGazetteerNamesByMRGID(ByVal MRGID As Integer) As String()
        Dim results() As Object = Me.Invoke("getGazetteerNamesByMRGID", New Object() {MRGID})
        Return CType(results(0), String())
    End Function


    Public Function BegingetGazetteerNamesByMRGID(ByVal MRGID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getGazetteerNamesByMRGID", New Object() {MRGID}, callback, asyncState)
    End Function


    Public Function EndgetGazetteerNamesByMRGID(ByVal asyncResult As System.IAsyncResult) As String()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String())
    End Function


    Public Overloads Sub getGazetteerNamesByMRGIDAsync(ByVal MRGID As Integer)
        Me.getGazetteerNamesByMRGIDAsync(MRGID, Nothing)
    End Sub


    Public Overloads Sub getGazetteerNamesByMRGIDAsync(ByVal MRGID As Integer, ByVal userState As Object)
        If (Me.getGazetteerNamesByMRGIDOperationCompleted Is Nothing) Then
            Me.getGazetteerNamesByMRGIDOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf OngetGazetteerNamesByMRGIDOperationCompleted)
        End If

        Me.InvokeAsync("getGazetteerNamesByMRGID", New Object() {MRGID}, Me.getGazetteerNamesByMRGIDOperationCompleted, userState)
    End Sub

    Private Sub OngetGazetteerNamesByMRGIDOperationCompleted(ByVal arg As Object)
        Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
        RaiseEvent getGazetteerNamesByMRGIDCompleted(Me, New getGazetteerNamesByMRGIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
    End Sub


    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub

End Class


<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.SerializableAttribute(),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Xml.Serialization.SoapTypeAttribute(Namespace:="http://gazetteer/v1.0")>
Public Class gazetteerRecord

    Private mRGIDField As Integer

    Private preferredGazetteerNameField As String

    Private preferredGazetteerNameLangField As String

    Private placeTypeField As String

    Private latitudeField As String

    Private longitudeField As String

    Private minLatitudeField As String

    Private maxLatitudeField As String

    Private minLongitudeField As String

    Private maxLongitudeField As String

    Private precisionField As String

    Private gazetteerSourceField As String

    Private statusField As String

    Private acceptedField As String


    Public Property MRGID As Integer
        Get
            Return Me.mRGIDField
        End Get
        Set
            Me.mRGIDField = Value
        End Set
    End Property


    Public Property preferredGazetteerName As String
        Get
            Return Me.preferredGazetteerNameField
        End Get
        Set
            Me.preferredGazetteerNameField = Value
        End Set
    End Property


    Public Property preferredGazetteerNameLang As String
        Get
            Return Me.preferredGazetteerNameLangField
        End Get
        Set
            Me.preferredGazetteerNameLangField = Value
        End Set
    End Property


    Public Property placeType As String
        Get
            Return Me.placeTypeField
        End Get
        Set
            Me.placeTypeField = Value
        End Set
    End Property


    Public Property latitude As String
        Get
            Return Me.latitudeField
        End Get
        Set
            Me.latitudeField = Value
        End Set
    End Property


    Public Property longitude As String
        Get
            Return Me.longitudeField
        End Get
        Set
            Me.longitudeField = Value
        End Set
    End Property


    Public Property minLatitude As String
        Get
            Return Me.minLatitudeField
        End Get
        Set
            Me.minLatitudeField = Value
        End Set
    End Property


    Public Property maxLatitude As String
        Get
            Return Me.maxLatitudeField
        End Get
        Set
            Me.maxLatitudeField = Value
        End Set
    End Property


    Public Property minLongitude As String
        Get
            Return Me.minLongitudeField
        End Get
        Set
            Me.minLongitudeField = Value
        End Set
    End Property


    Public Property maxLongitude As String
        Get
            Return Me.maxLongitudeField
        End Get
        Set
            Me.maxLongitudeField = Value
        End Set
    End Property


    Public Property precision As String
        Get
            Return Me.precisionField
        End Get
        Set
            Me.precisionField = Value
        End Set
    End Property


    Public Property gazetteerSource As String
        Get
            Return Me.gazetteerSourceField
        End Get
        Set
            Me.gazetteerSourceField = Value
        End Set
    End Property


    Public Property status As String
        Get
            Return Me.statusField
        End Get
        Set
            Me.statusField = Value
        End Set
    End Property


    Public Property accepted As String
        Get
            Return Me.acceptedField
        End Get
        Set
            Me.acceptedField = Value
        End Set
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.SerializableAttribute(),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Xml.Serialization.SoapTypeAttribute(Namespace:="http://gazetteer/v1.0")>
Public Class gazetteerSource

    Private sourceField As String

    Private sourceURLField As String


    Public Property source As String
        Get
            Return Me.sourceField
        End Get
        Set
            Me.sourceField = Value
        End Set
    End Property


    Public Property sourceURL As String
        Get
            Return Me.sourceURLField
        End Get
        Set
            Me.sourceURLField = Value
        End Set
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.SerializableAttribute(),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Xml.Serialization.SoapTypeAttribute(Namespace:="http://gazetteer/v1.0")>
Public Class gazetteerType

    Private typeField As String

    Private descriptionField As String


    Public Property type As String
        Get
            Return Me.typeField
        End Get
        Set
            Me.typeField = Value
        End Set
    End Property


    Public Property description As String
        Get
            Return Me.descriptionField
        End Get
        Set
            Me.descriptionField = Value
        End Set
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.SerializableAttribute(),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Xml.Serialization.SoapTypeAttribute(Namespace:="http://gazetteer/v1.0")>
Public Class gazetteerWMS

    Private mRGIDField As Integer

    Private urlField As String

    Private valueField As String

    Private namespaceField As String

    Private featureNameField As String

    Private featureTypeField As String


    Public Property MRGID As Integer
        Get
            Return Me.mRGIDField
        End Get
        Set
            Me.mRGIDField = Value
        End Set
    End Property


    Public Property url As String
        Get
            Return Me.urlField
        End Get
        Set
            Me.urlField = Value
        End Set
    End Property


    Public Property value As String
        Get
            Return Me.valueField
        End Get
        Set
            Me.valueField = Value
        End Set
    End Property


    Public Property [namespace] As String
        Get
            Return Me.namespaceField
        End Get
        Set
            Me.namespaceField = Me.value
        End Set
    End Property


    Public Property featureName As String
        Get
            Return Me.featureNameField
        End Get
        Set
            Me.featureNameField = Me.value
        End Set
    End Property


    Public Property featureType As String
        Get
            Return Me.featureTypeField
        End Get
        Set
            Me.featureTypeField = Me.value
        End Set
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.SerializableAttribute(),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Xml.Serialization.SoapTypeAttribute(Namespace:="http://gazetteer/v1.0")>
Public Class gazetteerRelation

    Private firstMRGIDField As Integer

    Private secondMRGIDField As Integer

    Private relationTypeField As String


    Public Property firstMRGID As Integer
        Get
            Return Me.firstMRGIDField
        End Get
        Set
            Me.firstMRGIDField = Value
        End Set
    End Property

    Public Property secondMRGID As Integer
        Get
            Return Me.secondMRGIDField
        End Get
        Set
            Me.secondMRGIDField = Value
        End Set
    End Property

    Public Property relationType As String
        Get
            Return Me.relationTypeField
        End Get
        Set
            Me.relationTypeField = Value
        End Set
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerRecordsByNameCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerRecordsByNameCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerRecordsByNameCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerRecord()
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerRecord())
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerRecordsByNamesCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerRecordsByNamesCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerRecordsByNamesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerRecord(,)
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerRecord(,))
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerRecordsBySourceCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerRecordsBySourceCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerRecordsBySourceCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerRecord()
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerRecord())
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerRecordsByTypeCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerRecordsByTypeCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerRecordsByTypeCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerRecord()
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerRecord())
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerRecordByMRGIDCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerRecordByMRGIDCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerRecordByMRGIDCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerRecord
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerRecord)
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerRelationsByMRGIDCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerRelationsByMRGIDCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerRelationsByMRGIDCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub


    Public ReadOnly Property Result As gazetteerRelation()
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerRelation())
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerWMSesCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerWMSesCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerWMSesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerWMS()
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerWMS())
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerRecordsByLatLongCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerRecordsByLatLongCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerRecordsByLatLongCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerRecord
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerRecord)
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerTypesCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerTypesCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerTypesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerType()
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerType())
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerSourcesCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerSourcesCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerSourcesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As gazetteerSource()
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), gazetteerSource())
        End Get
    End Property
End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0")>
Public Delegate Sub getGazetteerNamesByMRGIDCompletedEventHandler(ByVal sender As Object, ByVal e As getGazetteerNamesByMRGIDCompletedEventArgs)
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1590.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
Public Class getGazetteerNamesByMRGIDCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = Me.results
    End Sub

    Public ReadOnly Property Result As String()
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), String())
        End Get
    End Property
End Class